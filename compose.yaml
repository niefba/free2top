# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
include:
  - compose.db.yaml # with db declared

services:
  server:
    container_name: server_free2top
    build:
      context: restApi
      dockerfile: Dockerfile
      target: dev
    environment:
      NODE_ENV: dev
    env_file:
      - ./restApi/.env
    ports:
      - 4000:4000
    command: npm run dev
    develop:
      # The watch attribute automatically updates and previews your running Compose services as you edit and save your code
      # Run docker compose up --watch to build and launch a Compose project and start the file watch mode
      watch:
        - action: sync
          path: ./restApi/src
          target: /usr/src/app/src
          ignore:
            - node_modules/
        - action: rebuild
          path: ./restApi/package.json

    # PostgreSQL database used by application. `depends_on` tells Docker Compose to
    # start the database before your application. The `db-data` volume persists the
    # database data between container restarts.
    depends_on:
      db:
        condition: service_healthy

  client:
    container_name: client_free2top
    build:
      context: client
      dockerfile: Dockerfile
      target: dev
    command: npm run dev
    ports:
      - 3000:3000
    develop:
      # The watch attribute automatically updates and previews your running Compose services as you edit and save your code
      # Run docker compose up --watch to build and launch a Compose project and start the file watch mode
      watch:
        - action: sync
          path: ./client/src
          target: /usr/src/app/src
          ignore:
            - node_modules/
        - action: rebuild
          path: ./client/package.json
